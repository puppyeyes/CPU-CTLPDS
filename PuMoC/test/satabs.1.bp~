// automatically generated by CPROVER/SATABS

// variables with procedure-global scope

decl b0_LOCK;  // LOCK

// main
void main() begin

      // initialization of the shared-global and thread-local variables

      b0_LOCK:=*; 

 PC0: c$$__CPROVER_initialize();

 PC1: c$$main();

 PC2: skip;

end

// c::__CPROVER_initialize
void c$$__CPROVER_initialize() begin

    // file <built-in> line 23
 PC3: skip; // no predicates changed

    // file <built-in> line 25
 PC4: skip; // no predicates changed

    // file <built-in> line 26
 PC5: skip; // no predicates changed

    // file <built-in> line 27
 PC6: skip; // no predicates changed

    // file <built-in> line 36
 PC7: skip; // no predicates changed

    // file satabs/lock.c line 2
 PC8: b0_LOCK := 0;
    // TO Predicates: b0_LOCK

 PC9: skip;

end

// c::lock
void c$$lock() begin

    // file satabs/lock.c line 5 function lock
PC10: skip; // no predicates changed

PC11: skip; // no predicates changed

PC12: if * then goto l1; fi;

    // file satabs/lock.c line 7 function lock
PC13: assert(!b0_LOCK);

    // file satabs/lock.c line 8 function lock
PC14: b0_LOCK := 1;
    // TO Predicates: b0_LOCK

    // file satabs/lock.c line 9 function lock
PC15: skip; // no predicates changed

PC16: return;

    // file satabs/lock.c line 11 function lock
  l1:
PC17: skip; // no predicates changed

PC18: return;

    // file satabs/lock.c line 12 function lock
PC19: skip;

end

// c::unlock
void c$$unlock() begin

    // file satabs/lock.c line 16 function unlock
PC20: assert(b0_LOCK);

    // file satabs/lock.c line 17 function unlock
PC21: b0_LOCK := 0;
    // TO Predicates: b0_LOCK

    // file satabs/lock.c line 18 function unlock
PC22: skip;

end

// c::main
void c$$main() begin

    // file satabs/lock.c line 22 function main
PC23: skip; // no predicates changed

PC24: skip; // no predicates changed

    // file satabs/lock.c line 23 function main
PC25: skip; // no predicates changed

    // file satabs/lock.c line 24 function main
  l1:
PC26: if * then goto l4; fi;

    // file satabs/lock.c line 26 function main
PC27: skip; // no predicates changed

PC28: c$$lock();

PC29: skip; // no predicates changed

PC30: if * then goto l2; fi;

    // file satabs/lock.c line 28 function main
PC31: skip; // no predicates changed

    // file satabs/lock.c line 30 function main
  l2:
PC32: if * then goto l3; fi;

    // file satabs/lock.c line 32 function main
PC33: c$$unlock();

    // file satabs/lock.c line 33 function main
PC34: skip; // no predicates changed

    // file satabs/lock.c line 35 function main
  l3:
PC35: skip; // no predicates changed

    // file satabs/lock.c line 24 function main
PC36: goto l1;

    // file satabs/lock.c line 37 function main
  l4:
PC37: goto l4;

PC38: skip;

end

